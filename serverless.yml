service: serverless-stock-watch

frameworkVersion: '2'
useDotenv: true

package:
  patterns:
    - '!frontend/**'
    - '!node_modules/**'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  environment:
    STOCK_TABLE: ${env:STOCK_TABLE}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:GetItem
          Resource: "arn:aws:dynamodb:*:*:table/${self:provider.environment.STOCK_TABLE}"

functions:
  get_stock:
    handler: backend/get_stock.handler
    events:
      - http:
          path: /stocks/{symbol}
          method: get
          cors: true
  update_stock:
    handler: backend/update_stock.handler
    events:
      - http:
          path: /stocks
          method: post
          cors: true
  get_all_stocks:
    handler: backend/get_all_stocks.handler
    events:
      - http:
          path: /stocks
          method: get
          cors: true


resources:
  Resources:
    stockTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.STOCK_TABLE}
        AttributeDefinitions:
          - AttributeName: symbol
            AttributeType: S
        KeySchema:
          - AttributeName: symbol
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-finch

custom:
  client:
    bucketName: ${env:FINCH_BUCKET_NAME}
    distributionFolder: frontend/build
    errorDocument: index.html
